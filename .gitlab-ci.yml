stages:
  - build-test
  - benchmark
  - benchmark-completion

before_script:
  - (cd core-lib && git remote add smarr https://github.com/smarr/SOM.git && git fetch --all) || true
  - git submodule update --init

build-and-test-interpreters:
  stage: build-test
  tags: [zullie1]
  script:
    - cargo --version
    - cargo clean

    - cargo build --release --features=som-gc/marksweep --features=idiomatic
    # - cargo clippy --features=som-gc/marksweep --features=nan
    - mv ./target/release/som-interpreter-bc ./target/release/som-interpreter-bc_idiomatic

    - cargo build --release --features=som-gc/marksweep --features=nan
    - cargo clippy --features=som-gc/marksweep --features=nan
    - RUST_TEST_THREADS=1 cargo test --features som-gc/marksweep --features=nan
    - mv ./target/release/som-interpreter-bc ./target/release/som-interpreter-bc_nan

    - cargo build --release --features=som-gc/marksweep --features=l3bits
    - cargo clippy --features=som-gc/marksweep --features=l3bits
    - RUST_TEST_THREADS=1 cargo test --features som-gc/marksweep --features=l3bits
    #
    # Note:
    # Disable unit tests for lower 3-bit implementation due to signature refactoring for Symbol
    # From Symbol(Interned) To Symbol(Gc<Interned>)
    # Needs to bring modification inside the unit test
    #

    - mv ./target/release/som-interpreter-bc ./target/release/som-interpreter-bc_l3bits
    
    - cargo build --release --features=som-gc/marksweep --features=l4bits
    - cargo clippy --features=som-gc/marksweep --features=l4bits
    - RUST_TEST_THREADS=1 cargo test --features som-gc/marksweep --features=l4bits
    - mv ./target/release/som-interpreter-bc ./target/release/som-interpreter-bc_l4bits


    # Package and Upload
    # - |
    #   sftp tmp-artifacts << EOF
    #     -mkdir incoming/${CI_PIPELINE_ID}/
    #     put som-interpreter-bc_idiomatic.lz4 incoming/${CI_PIPELINE_ID}/
    #     put som-interpreter-bc_nan.lz4 incoming/${CI_PIPELINE_ID}/
    #     put som-interpreter-bc_l3bits.lz4 incoming/${CI_PIPELINE_ID}/
    #     put som-interpreter-bc_l4bits.lz4 incoming/${CI_PIPELINE_ID}/
    #   EOF

# benchmark:
#   parallel:
#     matrix:
#       - MACHINE:
#           - zullie1
#           - yuria
#           - yuria2
#           - yuria3
#           - yuria4
#   stage: benchmark
#   tags: [$MACHINE]
#   script:

    - export PATH=$PATH:/Users/gitlab-runner/Library/Python/3.12/bin
    - rebench --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" -c rebench.conf #t:$MACHINE

report-completion:
  stage: benchmark-completion
  tags: [zullie1]
  script:
    - rebench --experiment="CI ID $CI_PIPELINE_ID" --report-completion rebench.conf

